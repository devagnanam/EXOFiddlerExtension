//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EXOFiddlerInspector.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.7.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<font color=""green"">HTTP 502: False Positive</font><br />By design Office 365 Autodiscover does not respond to autodiscover.contoso.onmicrosoft.com for example on port 443. Validate this message by confirming this is an Office 365 IP address and perform a telnet to the IP address on port 80.
")]
        public string HTTP502AutodiscoverFalsePositive {
            get {
                return ((string)(this["HTTP502AutodiscoverFalsePositive"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<font color=""red"">HTTP 403: Forbidden</font> Is your firewall or web proxy blocking Outlook connectivity?<br />To fire this message a HTTP 403 response code was detected 
and ""Access Denied"" was found in the response body.<br />Check the Raw and WebView tabs, do you see anything which indicates traffic is blocked?<br /> 


")]
        public string HTTP403WebProxyBlocking {
            get {
                return ((string)(this["HTTP403WebProxyBlocking"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<font color=""red"">HTTP 503: FederatedSTSUnreachable</font><br />
The fedeation service is unreachable or unavailable. Check the Raw tab for additional details.<br /><br />
Check the realm page for the authenticating domain.<br />
<a href=""https://login.microsoftonline.com/GetUserRealm.srf?Login=user@contoso.com&xml=1"">https://login.microsoftonline.com/GetUserRealm.srf?Login=user@contoso.com&xml=1</a><br />
Expected responses:<br />
AuthURL: Expected to show federation service logon page.<br />
STSAuthURL: Expected to show HTTP 400<br />
MEXURL: Expected to show long stream of XML data.

If any of these show the HTTP 503 Service Unavailable this confirms a consistent failure on the federation service.<br />
If however you get the expected responses, this does not neccessarily mean the federation service / everything authentication is healthy.")]
        public string HTTP503FederatedSTSUnreachable {
            get {
                return ((string)(this["HTTP503FederatedSTSUnreachable"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://en.wikipedia.org/wiki/List_of_HTTP_status_codes")]
        public string HTTPStatusCodesURL {
            get {
                return ((string)(this["HTTPStatusCodesURL"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<font color=\"red\">HTTP 200: Errors found in response body.</font> Check the Raw t" +
            "ab, click \'View in Notepad\' button bottom right, and search for error in the res" +
            "ponse to review.\r\n")]
        public string HTTP200ErrorsFound {
            get {
                return ((string)(this["HTTP200ErrorsFound"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<font color=\"orange\">HTTP 401: Unauthorized</font> These are expected and are not" +
            " an issue as long as a HTTP 200 is seen for authentication to the server which i" +
            "ssued the HTTP 401 unauthorized security challenge.")]
        public string HTTP401Unauthorized {
            get {
                return ((string)(this["HTTP401Unauthorized"]));
            }
            set {
                this["HTTP401Unauthorized"] = value;
            }
        }
    }
}
